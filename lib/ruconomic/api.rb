module Ruconomic
  module API
    extend Ruconomic::WebService

    autoload(:Account, 'ruconomic/api/account.rb')
    autoload(:AccountingPeriod, 'ruconomic/api/accounting_period.rb')
    autoload(:AccountingYear, 'ruconomic/api/accounting_year.rb')
    autoload(:Activity, 'ruconomic/api/activity.rb')
    autoload(:BankPaymentType, 'ruconomic/api/bank_payment_type.rb')
    autoload(:BudgetFigure, 'ruconomic/api/budget_figure.rb')
    autoload(:CashBook, 'ruconomic/api/cash_book.rb')
    autoload(:CashBookEntry, 'ruconomic/api/cash_book_entry.rb')
    autoload(:Company, 'ruconomic/api/company.rb')
    autoload(:CostType, 'ruconomic/api/cost_type.rb')
    autoload(:CostTypeGroup, 'ruconomic/api/cost_type_group.rb')
    autoload(:Creditor, 'ruconomic/api/creditor.rb')
    autoload(:CreditorContact, 'ruconomic/api/creditor_contact.rb')
    autoload(:CreditorEntry, 'ruconomic/api/creditor_entry.rb')
    autoload(:CreditorGroup, 'ruconomic/api/creditor_group.rb')
    autoload(:Currency, 'ruconomic/api/currency.rb')
    autoload(:CurrentInvoice, 'ruconomic/api/current_invoice.rb')
    autoload(:CurrentInvoiceLine, 'ruconomic/api/current_invoice_line.rb')
    autoload(:CurrentSupplierInvoice, 'ruconomic/api/current_supplier_invoice.rb')
    autoload(:CurrentSupplierInvoiceLine, 'ruconomic/api/current_supplier_invoice_line.rb')
    autoload(:Debtor, 'ruconomic/api/debtor.rb')
    autoload(:DebtorContact, 'ruconomic/api/debtor_contact.rb')
    autoload(:DebtorEntry, 'ruconomic/api/debtor_entry.rb')
    autoload(:DebtorGroup, 'ruconomic/api/debtor_group.rb')
    autoload(:DeliveryLocation, 'ruconomic/api/delivery_location.rb')
    autoload(:Department, 'ruconomic/api/department.rb')
    autoload(:DistributionKey, 'ruconomic/api/distribution_key.rb')
    autoload(:DocumentArchiveCategory, 'ruconomic/api/document_archive_category.rb')
    autoload(:Employee, 'ruconomic/api/employee.rb')
    autoload(:EmployeeGroup, 'ruconomic/api/employee_group.rb')
    autoload(:Entry, 'ruconomic/api/entry.rb')
    autoload(:ExtendedVatZone, 'ruconomic/api/extended_vat_zone.rb')
    autoload(:InventoryLocation, 'ruconomic/api/inventory_location.rb')
    autoload(:Invoice, 'ruconomic/api/invoice.rb')
    autoload(:InvoiceLine, 'ruconomic/api/invoice_line.rb')
    autoload(:KeyFigureCode, 'ruconomic/api/key_figure_code.rb')
    autoload(:MileageEntry, 'ruconomic/api/mileage_entry.rb')
    autoload(:Order, 'ruconomic/api/order.rb')
    autoload(:OrderLine, 'ruconomic/api/order_line.rb')
    autoload(:PriceGroup, 'ruconomic/api/price_group.rb')
    autoload(:Product, 'ruconomic/api/product.rb')
    autoload(:ProductGroup, 'ruconomic/api/product_group.rb')
    autoload(:ProductPrice, 'ruconomic/api/product_price.rb')
    autoload(:Project, 'ruconomic/api/project.rb')
    autoload(:ProjectGroup, 'ruconomic/api/project_group.rb')
    autoload(:Quotation, 'ruconomic/api/quotation.rb')
    autoload(:QuotationLine, 'ruconomic/api/quotation_line.rb')
    autoload(:ReportCode, 'ruconomic/api/report_code.rb')
    autoload(:ReportCodeSet, 'ruconomic/api/report_code_set.rb')
    autoload(:ScannedDocument, 'ruconomic/api/scanned_document.rb')
    autoload(:Subscriber, 'ruconomic/api/subscriber.rb')
    autoload(:Subscription, 'ruconomic/api/subscription.rb')
    autoload(:SubscriptionLine, 'ruconomic/api/subscription_line.rb')
    autoload(:SumInterval, 'ruconomic/api/sum_interval.rb')
    autoload(:TemplateCollection, 'ruconomic/api/template_collection.rb')
    autoload(:TermOfPayment, 'ruconomic/api/term_of_payment.rb')
    autoload(:TimeEntry, 'ruconomic/api/time_entry.rb')
    autoload(:Unit, 'ruconomic/api/unit.rb')
    autoload(:VatAccount, 'ruconomic/api/vat_account.rb')

    # Connects to the server.
    # Parameters: agreementNumber: The agreement number for the subscription. userName: The user name of the subscription. password: The password for the user name.
    #
    # @note TODO: This method was autogenerated from the WSDL - see https://github.com/coherify/ruconomic#contributing"
    # @see https://api.e-conomic.com/secure/api1/EconomicWebService.asmx?op=ConnectAsAdministrator
    # @return [Hash] The body content of the SOAP response.
    def self.connect_as_administrator
      response = invoke('ConnectAsAdministrator') do |message|
        raise "TODO: This method was autogenerated from the WSDL - see https://github.com/coherify/ruconomic#contributing"
      end
    end

    # Connects to the server.
    # Parameters: agreementNumber: The agreement number for the subscription. userName: The user name of the subscription. password: The password for the user name. customerNumber: the internal adminCustomerNumber
    #
    # @note TODO: This method was autogenerated from the WSDL - see https://github.com/coherify/ruconomic#contributing"
    # @see https://api.e-conomic.com/secure/api1/EconomicWebService.asmx?op=ConnectAsAdministratorWithCustomerNumber
    # @return [Hash] The body content of the SOAP response.
    def self.connect_as_administrator_with_customer_number
      response = invoke('ConnectAsAdministratorWithCustomerNumber') do |message|
        raise "TODO: This method was autogenerated from the WSDL - see https://github.com/coherify/ruconomic#contributing"
      end
    end

    # Connects to the server.
    # @params token [String]: The agreement grant token provided
    # Parameters: app_token [String]: The application secret token provided.
    #
    # @see https://api.e-conomic.com/secure/api1/EconomicWebService.asmx?op=ConnectWithToken
    # @return [Hash] The body content of the SOAP response.
    def self.connect_with_token(token, app_token)
      response = invoke('ConnectWithToken') do |message|
        message.add 'token', token
        message.add 'appToken', app_token
      end

      response.to_hash[:connect_with_token_response][:connect_with_token_result]
    end

    # Disconnects from the server.
    #
    # @see https://api.e-conomic.com/secure/api1/EconomicWebService.asmx?op=Disconnect
    # @return [String] The result of the disconnect operation
    def self.disconnect
      response = invoke('Disconnect')
      response.to_hash[:disconnect_response][:disconnect_result]
    end

    # Gets information about the e-conomic API.
    #
    # @see https://api.e-conomic.com/secure/api1/EconomicWebService.asmx?op=GetApiInformation
    # @return [String] The API version
    def self.get_api_information
      response = invoke('GetApiInformation')

      response.to_hash[:get_api_information_response][:get_api_information_result]
    end

  end
end
